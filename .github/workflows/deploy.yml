name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: 134.199.145.43
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/workspace/propelity-be
            git pull
            
            # Ensure docker-compose is installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing docker-compose..."
              apt-get update
              apt-get install -y docker-compose
            fi
            
            # Make the scripts executable
            chmod +x deploy.sh
            
            # Deploy with bridge network first (more reliable)
            echo "Deploying with bridge network configuration..."
            ./deploy.sh
            
            # Copy diagnostic scripts to the container
            CONTAINER_ID=$(docker-compose ps -q app)
            echo "Container ID: $CONTAINER_ID"
            
            echo "Copying test scripts to container..."
            docker cp src/network-test.js $CONTAINER_ID:/app/src/
            docker cp src/docker-test-email.js $CONTAINER_ID:/app/src/
            
            # Run network tests
            echo "Running network diagnostics..."
            docker-compose exec -T app node src/network-test.js || echo "Network test failed, but continuing"
            
            # Test email connectivity
            echo "Testing email functionality..."
            docker-compose exec -T app node src/docker-test-email.js || echo "Email test failed, but deployment continues"
            
            # If needed, try host network as a last resort
            if ! docker-compose exec -T app node src/docker-test-email.js | grep -q "Email sent successfully"; then
              echo "Email test failed with bridge network, trying host network mode..."
              ./deploy.sh --host-network
              
              # Copy test scripts again
              CONTAINER_ID=$(docker-compose ps -q app)
              docker cp src/network-test.js $CONTAINER_ID:/app/src/
              docker cp src/docker-test-email.js $CONTAINER_ID:/app/src/
              
              # Final email test
              docker-compose exec -T app node src/docker-test-email.js || echo "Email still failing, manual intervention needed"
            fi
            
            # Final status check
            echo "Final container status:"
            docker-compose ps